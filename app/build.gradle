apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion Integer.parseInt(compile_sdk_version)
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId "com.yuchengren.mvp"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    greendao {
        schemaVersion 1
        daoPackage 'com.yuchengren.mvp.greendao.gen'
        targetGenDir 'src/main/java'
    }

    sourceSets {
        main{
            jni.srcDirs = [] //disable automatic ndk-build call 禁用gradle默认的ndk-build，防止AS自己生成android.mk编译jni工程
            jniLibs.srcDirs = ['src/main/libs','src/main/jniLibs'] //设置目标的so存放路径，也就是组装到apk中的so路径
            //jniLibs.srcDir "src/main/libs"
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api 'io.reactivex.rxjava2:rxjava:2.1.7'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'

    api "$squareup_okhttp3:okhttp:$okhttp_version"
    api "$greenrobot:greendao:$greendao_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "$android_support:appcompat-v7:$android_support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"

    api project(':kernel-log')
//    api project(':kernel-mvp')
//    api project(':kernel-union')
//    api project(':kernel-task')
    api project(':lib-changeskin')
}

configurations.all {
    //强制统一support库版本
    resolutionStrategy.eachDependency { dependency ->
        if (dependency.requested.group == "$android_support" && !dependency.requested.name.contains('multidex')) {
            dependency.useVersion("$android_support_version")
        }
    }
}
